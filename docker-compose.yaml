x-postgres-common:
  &postgres-common
  image: timescale/timescaledb-ha:pg16
  user: postgres
  restart: always
  healthcheck:
    test: 'pg_isready -U postgres --dbname=postgres'
    interval: 10s
    timeout: 5s
    retries: 5

services:
  postgres_primary:
    <<: *postgres-common
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres 
      -c wal_level=replica 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
    volumes:
      - ./00_init.sql:/docker-entrypoint-initdb.d/00_init.sql
      - pgdata-primary:/home/postgres/pgdata/data

  postgres_replica:
    <<: *postgres-common
    ports:
      - 5433:5432
    environment:
      PGUSER: ${REPLICATION_USER:-replicator}
      PGPASSWORD: ${REPLICATION_PASSWORD:-IeXXYfVDidqH2GW6GBKlxAMc0h5aVFPVk14D}
    volumes:
      - pgdata-replica:/home/postgres/pgdata/data
    command: |
      bash -c "
      until pg_basebackup --pgdata=/home/postgres/pgdata/data -R --slot=replication_slot --host=postgres_primary --port=5432
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /home/postgres/pgdata/data
      postgres
      "
    depends_on:
      - postgres_primary
volumes:
  pgdata-primary:
  pgdata-replica: